"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/sales-dashboard/route";
exports.ids = ["app/api/sales-dashboard/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "node:stream/web":
/*!**********************************!*\
  !*** external "node:stream/web" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("node:stream/web");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsales-dashboard%2Froute&page=%2Fapi%2Fsales-dashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsales-dashboard%2Froute.ts&appDir=D%3A%5CSales%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CSales&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsales-dashboard%2Froute&page=%2Fapi%2Fsales-dashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsales-dashboard%2Froute.ts&appDir=D%3A%5CSales%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CSales&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var D_Sales_app_api_sales_dashboard_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/sales-dashboard/route.ts */ \"(rsc)/./app/api/sales-dashboard/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/sales-dashboard/route\",\n        pathname: \"/api/sales-dashboard\",\n        filename: \"route\",\n        bundlePath: \"app/api/sales-dashboard/route\"\n    },\n    resolvedPagePath: \"D:\\\\Sales\\\\app\\\\api\\\\sales-dashboard\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_Sales_app_api_sales_dashboard_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/sales-dashboard/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzYWxlcy1kYXNoYm9hcmQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnNhbGVzLWRhc2hib2FyZCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnNhbGVzLWRhc2hib2FyZCUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDU2FsZXMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUQlM0ElNUNTYWxlcyZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDRjtBQUMzRTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2FpLWxlYXJuaW5nLXBsYXRmb3JtLz83NmUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkQ6XFxcXFNhbGVzXFxcXGFwcFxcXFxhcGlcXFxcc2FsZXMtZGFzaGJvYXJkXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9zYWxlcy1kYXNoYm9hcmQvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9zYWxlcy1kYXNoYm9hcmRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3NhbGVzLWRhc2hib2FyZC9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkQ6XFxcXFNhbGVzXFxcXGFwcFxcXFxhcGlcXFxcc2FsZXMtZGFzaGJvYXJkXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9zYWxlcy1kYXNoYm9hcmQvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsales-dashboard%2Froute&page=%2Fapi%2Fsales-dashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsales-dashboard%2Froute.ts&appDir=D%3A%5CSales%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CSales&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/sales-dashboard/route.ts":
/*!******************************************!*\
  !*** ./app/api/sales-dashboard/route.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _utils_excel_analyzer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/excel-analyzer */ \"(rsc)/./utils/excel-analyzer.ts\");\n/* harmony import */ var groq_sdk__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! groq-sdk */ \"(rsc)/./node_modules/groq-sdk/index.mjs\");\n/* harmony import */ var _utils_json_cleaner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/json-cleaner */ \"(rsc)/./utils/json-cleaner.ts\");\n/* harmony import */ var _utils_insights_schema__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../utils/insights-schema */ \"(rsc)/./utils/insights-schema.ts\");\n\n\n\n\n\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const timeType = searchParams.get(\"timeType\"); // 'week', 'month', 'quarter'\n        const timeValue = searchParams.get(\"timeValue\"); // '1', 'Q1', '3'\n        const branch = searchParams.get(\"branch\"); // 'all', 'Hà Nội', 'Hồ Chí Minh', 'Đà Nẵng'\n        const year = searchParams.get(\"year\") || \"2025\";\n        const analyzer = new _utils_excel_analyzer__WEBPACK_IMPORTED_MODULE_1__.ExcelAnalyzer();\n        await analyzer.loadSalesData();\n        let filteredData = analyzer.getAllData();\n        // Lọc theo thời gian\n        if (timeType && timeValue) {\n            switch(timeType){\n                case \"week\":\n                    // Kiểm tra timeValue có phải là số không\n                    const weekNumber = parseInt(timeValue);\n                    if (isNaN(weekNumber)) {\n                        // Nếu không phải số (ví dụ: \"Q1\"), sử dụng tuần đầu tiên\n                        filteredData = filteredData.filter((item)=>item.week === 1 && item.year === parseInt(year));\n                    } else {\n                        filteredData = filteredData.filter((item)=>item.week === weekNumber && item.year === parseInt(year));\n                    }\n                    break;\n                case \"quarter\":\n                    filteredData = filteredData.filter((item)=>item.quarter === timeValue && item.year === parseInt(year));\n                    break;\n                case \"month\":\n                    // Tính tháng từ tuần (xấp xỉ)\n                    const month = parseInt(timeValue);\n                    if (isNaN(month)) {\n                        // Nếu không phải số, sử dụng tháng đầu tiên\n                        const startWeek = 1;\n                        const endWeek = 4;\n                        filteredData = filteredData.filter((item)=>item.week >= startWeek && item.week <= endWeek && item.year === parseInt(year));\n                    } else {\n                        const startWeek = (month - 1) * 4 + 1;\n                        const endWeek = month * 4;\n                        filteredData = filteredData.filter((item)=>item.week >= startWeek && item.week <= endWeek && item.year === parseInt(year));\n                    }\n                    break;\n            }\n        }\n        // Lọc theo chi nhánh\n        if (branch && branch !== \"all\") {\n            filteredData = filteredData.filter((item)=>item.branch === branch);\n        }\n        // Tính toán thống kê\n        const totalRevenue = filteredData.reduce((sum, item)=>sum + item.total_revenue, 0);\n        const totalAdCost = filteredData.reduce((sum, item)=>sum + item.ad_cost, 0);\n        const avgROI = totalAdCost > 0 ? totalRevenue / totalAdCost : 0;\n        // Phân tích theo chi nhánh\n        const branchAnalysis = {};\n        const branches = Array.from(new Set(filteredData.map((item)=>item.branch)));\n        branches.forEach((branchName)=>{\n            const branchData = filteredData.filter((item)=>item.branch === branchName);\n            const branchRevenue = branchData.reduce((sum, item)=>sum + item.total_revenue, 0);\n            const branchAdCost = branchData.reduce((sum, item)=>sum + item.ad_cost, 0);\n            const branchROI = branchAdCost > 0 ? branchRevenue / branchAdCost : 0;\n            // Nếu chỉ chọn 1 chi nhánh, percentage sẽ là 100%\n            // Nếu chọn nhiều chi nhánh, tính percentage bình thường\n            const percentage = branches.length === 1 ? 100 : branchRevenue / totalRevenue * 100;\n            branchAnalysis[branchName] = {\n                revenue: branchRevenue,\n                adCost: branchAdCost,\n                roi: branchROI,\n                percentage: percentage\n            };\n        });\n        // Phân tích theo kênh\n        const channelAnalysis = {};\n        const channels = Array.from(new Set(filteredData.map((item)=>item.channel)));\n        channels.forEach((channelName)=>{\n            const channelData = filteredData.filter((item)=>item.channel === channelName);\n            const channelRevenue = channelData.reduce((sum, item)=>sum + item.total_revenue, 0);\n            const channelAdCost = channelData.reduce((sum, item)=>sum + item.ad_cost, 0);\n            const channelROI = channelAdCost > 0 ? channelRevenue / channelAdCost : 0;\n            // Nếu chỉ chọn 1 kênh, percentage sẽ là 100%\n            // Nếu chọn nhiều kênh, tính percentage bình thường\n            const percentage = channels.length === 1 ? 100 : channelRevenue / totalRevenue * 100;\n            channelAnalysis[channelName] = {\n                revenue: channelRevenue,\n                adCost: channelAdCost,\n                roi: channelROI,\n                percentage: percentage\n            };\n        });\n        // Phân tích theo tuần (nếu có dữ liệu nhiều tuần)\n        const weeklyAnalysis = {};\n        const weeks = Array.from(new Set(filteredData.map((item)=>item.week))).sort((a, b)=>a - b);\n        weeks.forEach((week)=>{\n            const weekData = filteredData.filter((item)=>item.week === week);\n            const weekRevenue = weekData.reduce((sum, item)=>sum + item.total_revenue, 0);\n            weeklyAnalysis[week] = weekRevenue;\n        });\n        // Tạo AI insights\n        const aiInsights = await generateAIInsights({\n            totalRevenue,\n            totalAdCost,\n            avgROI,\n            branchAnalysis,\n            channelAnalysis,\n            weeklyAnalysis,\n            timeType,\n            timeValue,\n            branch,\n            year\n        });\n        const response = {\n            summary: {\n                totalRevenue,\n                totalAdCost,\n                avgROI,\n                totalRevenueFormatted: totalRevenue.toLocaleString(\"vi-VN\"),\n                totalAdCostFormatted: totalAdCost.toLocaleString(\"vi-VN\"),\n                avgROIFormatted: avgROI.toFixed(2)\n            },\n            branchAnalysis,\n            channelAnalysis,\n            weeklyAnalysis,\n            aiInsights,\n            filters: {\n                timeType,\n                timeValue,\n                branch,\n                year\n            }\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response);\n    } catch (error) {\n        console.error(\"Error generating dashboard data:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Lỗi khi tạo dữ liệu dashboard\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function generateGroqInsights(prompt) {\n    try {\n        // Check if Groq API key is available\n        if (!process.env.GROQ_API_KEY) {\n            console.log(\"Groq API key not found, using fallback analysis\");\n            return JSON.stringify({\n                overview: \"Ph\\xe2n t\\xedch dữ liệu chi nh\\xe1nh\",\n                topPerformer: \"Hiệu suất chi nh\\xe1nh\",\n                recommendations: [\n                    \"Cần cấu h\\xecnh GROQ_API_KEY để sử dụng AI ph\\xe2n t\\xedch\"\n                ],\n                risks: [\n                    \"Kh\\xf4ng thể ph\\xe2n t\\xedch AI do thiếu API key\"\n                ],\n                detailedAnalysis: [\n                    \"Sử dụng ph\\xe2n t\\xedch cơ bản\"\n                ],\n                trends: \"Xu hướng cần theo d\\xf5i\"\n            });\n        }\n        const groq = new groq_sdk__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n            apiKey: process.env.GROQ_API_KEY\n        });\n        const completion = await groq.chat.completions.create({\n            messages: [\n                {\n                    role: \"system\",\n                    content: `Bạn là chuyên gia phân tích kinh doanh cao cấp tại Việt Nam với 15+ năm kinh nghiệm. BẮT BUỘC chỉ sử dụng TIẾNG VIỆT trong toàn bộ phân tích. KHÔNG được dùng tiếng Anh.\n\nYÊU CẦU PHÂN TÍCH:\n- Phân tích sâu sắc, chi tiết và chuyên nghiệp\n- Đưa ra nhận xét cụ thể với số liệu và dữ liệu thực tế\n- Cảnh báo rủi ro dựa trên xu hướng thị trường và dữ liệu lịch sử\n- Đề xuất hành động khả thi và có tính thực tiễn cao\n- Sử dụng ngôn ngữ kinh doanh chuyên nghiệp\n\nTRẢ VỀ JSON format chính xác:\n{\n  \"overview\": \"Phân tích tổng quan chi tiết về tình hình kinh doanh, hiệu suất tổng thể, và xu hướng chính của doanh nghiệp trong giai đoạn này. Bao gồm đánh giá về doanh thu, lợi nhuận, ROI và so sánh với kỳ trước.\",\n  \"topPerformer\": \"Phân tích chi tiết về chi nhánh/kênh bán hàng có hiệu suất tốt nhất, bao gồm lý do thành công, chiến lược hiệu quả, và bài học có thể áp dụng cho các chi nhánh khác.\",\n  \"recommendations\": [\n    \"Đề xuất chiến lược cụ thể với timeline và mục tiêu rõ ràng\",\n    \"Đề xuất tối ưu hóa quy trình và cải thiện hiệu quả\",\n    \"Đề xuất phát triển thị trường và mở rộng kinh doanh\",\n    \"Đề xuất quản lý rủi ro và tài chính\"\n  ],\n  \"risks\": [\n    \"Cảnh báo rủi ro thị trường với phân tích nguyên nhân và tác động\",\n    \"Cảnh báo rủi ro tài chính và đề xuất biện pháp phòng ngừa\",\n    \"Cảnh báo rủi ro cạnh tranh và chiến lược đối phó\",\n    \"Cảnh báo rủi ro vận hành và quản lý\"\n  ],\n  \"detailedAnalysis\": [\n    \"Phân tích chi tiết hiệu suất từng chi nhánh với số liệu cụ thể\",\n    \"Phân tích xu hướng thị trường và tác động đến doanh nghiệp\",\n    \"Phân tích hiệu quả các kênh bán hàng và marketing\",\n    \"Phân tích cơ hội tăng trưởng và thách thức cần vượt qua\"\n  ],\n  \"trends\": \"Dự báo xu hướng thị trường trong 3-6 tháng tới, bao gồm cơ hội và thách thức, cùng với khuyến nghị chuẩn bị cho doanh nghiệp.\"\n}\n\nQUAN TRỌNG: \n- 100% nội dung phải bằng TIẾNG VIỆT\n- Mỗi phần phải có ít nhất 50-100 từ\n- Sử dụng ngôn ngữ kinh doanh chuyên nghiệp\n- CHỈ trả về JSON hợp lệ, không có text khác\n- Tránh lặp lại từ ngữ và cấu trúc câu`\n                },\n                {\n                    role: \"user\",\n                    content: prompt\n                }\n            ],\n            model: \"llama3-8b-8192\",\n            temperature: 0.1,\n            max_tokens: 1200,\n            response_format: {\n                type: \"json_object\"\n            }\n        });\n        const response = completion.choices[0]?.message?.content || \"{}\";\n        // Kiểm tra và làm sạch response\n        if (response.includes(\"Nh\\xf3 Nh\\xf3 Nh\\xf3\") || response.includes(\"fakihuyong\") || response.includes(\"otecung\")) {\n            console.log(\"Detected repetitive text in AI response, using fallback\");\n            return JSON.stringify({\n                overview: \"Ph\\xe2n t\\xedch dữ liệu chi nh\\xe1nh với hiệu suất kinh doanh\",\n                topPerformer: \"Chi nh\\xe1nh c\\xf3 hiệu suất tốt nhất trong hệ thống\",\n                recommendations: [\n                    \"Tối ưu h\\xf3a chi ph\\xed quảng c\\xe1o\",\n                    \"Cải thiện hiệu quả k\\xeanh b\\xe1n h\\xe0ng\",\n                    \"Ph\\xe1t triển chiến lược mới\"\n                ],\n                risks: [\n                    \"Theo d\\xf5i xu hướng thị trường\",\n                    \"Kiểm so\\xe1t rủi ro t\\xe0i ch\\xednh\",\n                    \"Quản l\\xfd cạnh tranh\"\n                ],\n                detailedAnalysis: [\n                    \"Ph\\xe2n t\\xedch hiệu quả chi nh\\xe1nh\",\n                    \"Đ\\xe1nh gi\\xe1 k\\xeanh b\\xe1n h\\xe0ng\",\n                    \"Xem x\\xe9t xu hướng tuần\",\n                    \"Tối ưu h\\xf3a ROI\"\n                ],\n                trends: \"Xu hướng tăng trưởng ổn định với tiềm năng cải thiện\"\n            });\n        }\n        return response;\n    } catch (error) {\n        console.error(\"Error calling Groq API:\", error);\n        // Handle specific Groq errors\n        if (error && typeof error === \"object\" && \"error\" in error) {\n            const groqError = error;\n            if (groqError.error?.code === \"json_validate_failed\") {\n                console.log(\"JSON validation failed, trying without response_format...\");\n                // Try again without response_format as fallback\n                try {\n                    const fallbackCompletion = await new groq_sdk__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n                        apiKey: process.env.GROQ_API_KEY\n                    }).chat.completions.create({\n                        messages: [\n                            {\n                                role: \"system\",\n                                content: `Bạn là chuyên gia phân tích kinh doanh cao cấp tại Việt Nam với 15+ năm kinh nghiệm. BẮT BUỘC chỉ sử dụng TIẾNG VIỆT trong toàn bộ phân tích. KHÔNG được dùng tiếng Anh.\n\nYÊU CẦU PHÂN TÍCH:\n- Phân tích sâu sắc, chi tiết và chuyên nghiệp\n- Đưa ra nhận xét cụ thể với số liệu và dữ liệu thực tế\n- Cảnh báo rủi ro dựa trên xu hướng thị trường và dữ liệu lịch sử\n- Đề xuất hành động khả thi và có tính thực tiễn cao\n- Sử dụng ngôn ngữ kinh doanh chuyên nghiệp\n\nTRẢ VỀ JSON format chính xác:\n{\n  \"overview\": \"Phân tích tổng quan chi tiết về tình hình kinh doanh, hiệu suất tổng thể, và xu hướng chính của doanh nghiệp trong giai đoạn này. Bao gồm đánh giá về doanh thu, lợi nhuận, ROI và so sánh với kỳ trước.\",\n  \"topPerformer\": \"Phân tích chi tiết về chi nhánh/kênh bán hàng có hiệu suất tốt nhất, bao gồm lý do thành công, chiến lược hiệu quả, và bài học có thể áp dụng cho các chi nhánh khác.\",\n  \"recommendations\": [\n    \"Đề xuất chiến lược cụ thể với timeline và mục tiêu rõ ràng\",\n    \"Đề xuất tối ưu hóa quy trình và cải thiện hiệu quả\",\n    \"Đề xuất phát triển thị trường và mở rộng kinh doanh\",\n    \"Đề xuất quản lý rủi ro và tài chính\"\n  ],\n  \"risks\": [\n    \"Cảnh báo rủi ro thị trường với phân tích nguyên nhân và tác động\",\n    \"Cảnh báo rủi ro tài chính và đề xuất biện pháp phòng ngừa\",\n    \"Cảnh báo rủi ro cạnh tranh và chiến lược đối phó\",\n    \"Cảnh báo rủi ro vận hành và quản lý\"\n  ],\n  \"detailedAnalysis\": [\n    \"Phân tích chi tiết hiệu suất từng chi nhánh với số liệu cụ thể\",\n    \"Phân tích xu hướng thị trường và tác động đến doanh nghiệp\",\n    \"Phân tích hiệu quả các kênh bán hàng và marketing\",\n    \"Phân tích cơ hội tăng trưởng và thách thức cần vượt qua\"\n  ],\n  \"trends\": \"Dự báo xu hướng thị trường trong 3-6 tháng tới, bao gồm cơ hội và thách thức, cùng với khuyến nghị chuẩn bị cho doanh nghiệp.\"\n}\n\nQUAN TRỌNG: \n- 100% nội dung phải bằng TIẾNG VIỆT\n- Mỗi phần phải có ít nhất 50-100 từ\n- Sử dụng ngôn ngữ kinh doanh chuyên nghiệp\n- CHỈ trả về JSON hợp lệ, không có text khác\n- Tránh lặp lại từ ngữ và cấu trúc câu`\n                            },\n                            {\n                                role: \"user\",\n                                content: prompt\n                            }\n                        ],\n                        model: \"llama3-8b-8192\",\n                        temperature: 0.1,\n                        max_tokens: 1500\n                    });\n                    const fallbackResponse = fallbackCompletion.choices[0]?.message?.content || \"{}\";\n                    console.log(\"Fallback response received:\", fallbackResponse);\n                    return fallbackResponse;\n                } catch (fallbackError) {\n                    console.log(\"Fallback also failed:\", fallbackError);\n                }\n            } else if (groqError.error?.code === \"rate_limit_exceeded\") {\n                console.log(\"Rate limit exceeded, using fallback response\");\n            }\n        }\n        // Return fallback response\n        return JSON.stringify({\n            overview: \"Ph\\xe2n t\\xedch dữ liệu chi nh\\xe1nh với hiệu suất kinh doanh\",\n            topPerformer: \"Chi nh\\xe1nh c\\xf3 hiệu suất tốt nhất trong hệ thống\",\n            recommendations: [\n                \"Tối ưu h\\xf3a chi ph\\xed quảng c\\xe1o\",\n                \"Cải thiện hiệu quả k\\xeanh b\\xe1n h\\xe0ng\",\n                \"Ph\\xe1t triển chiến lược mới\"\n            ],\n            risks: [\n                \"Theo d\\xf5i xu hướng thị trường\",\n                \"Kiểm so\\xe1t rủi ro t\\xe0i ch\\xednh\",\n                \"Quản l\\xfd cạnh tranh\"\n            ],\n            detailedAnalysis: [\n                \"Ph\\xe2n t\\xedch hiệu quả chi nh\\xe1nh\",\n                \"Đ\\xe1nh gi\\xe1 k\\xeanh b\\xe1n h\\xe0ng\",\n                \"Xem x\\xe9t xu hướng tuần\",\n                \"Tối ưu h\\xf3a ROI\"\n            ],\n            trends: \"Xu hướng tăng trưởng ổn định với tiềm năng cải thiện\"\n        });\n    }\n}\nasync function generateAIInsights(data) {\n    const { totalRevenue, totalAdCost, avgROI, branchAnalysis, channelAnalysis, weeklyAnalysis, timeType, timeValue, branch, year } = data;\n    const insights = {\n        overview: \"\",\n        topPerformer: \"\",\n        summary: \"\",\n        recommendations: [],\n        trends: \"\",\n        risks: [],\n        detailedAnalysis: [],\n        performanceMetrics: {\n            revenueGrowth: \"Đang ph\\xe2n t\\xedch...\",\n            efficiencyScore: \"Đang ph\\xe2n t\\xedch...\",\n            marketShare: \"Đang ph\\xe2n t\\xedch...\",\n            costEffectiveness: \"Đang ph\\xe2n t\\xedch...\"\n        }\n    };\n    // === PHÂN TÍCH THÔNG MINH DỰA TRÊN DỮ LIỆU THỰC TẾ ===\n    // 1. Tính toán các ngưỡng động dựa trên dữ liệu thực tế\n    const allROIs = Object.values(branchAnalysis).map((b)=>b.roi);\n    const allRevenues = Object.values(branchAnalysis).map((b)=>b.revenue);\n    const allAdCosts = Object.values(branchAnalysis).map((b)=>b.adCost);\n    const avgROIOverall = allROIs.reduce((sum, roi)=>sum + roi, 0) / allROIs.length;\n    const maxROI = Math.max(...allROIs);\n    const minROI = Math.min(...allROIs);\n    const roiStdDev = Math.sqrt(allROIs.reduce((sum, roi)=>sum + Math.pow(roi - avgROIOverall, 2), 0) / allROIs.length);\n    const avgRevenue = allRevenues.reduce((sum, rev)=>sum + rev, 0) / allRevenues.length;\n    const maxRevenue = Math.max(...allRevenues);\n    const minRevenue = Math.min(...allRevenues);\n    // 2. Định nghĩa ngưỡng thông minh\n    const highROIThreshold = avgROIOverall + roiStdDev;\n    const lowROIThreshold = avgROIOverall - roiStdDev;\n    const exceptionalROIThreshold = avgROIOverall + roiStdDev * 1.5;\n    const highRevenueThreshold = avgRevenue + Math.sqrt(allRevenues.reduce((sum, rev)=>sum + Math.pow(rev - avgRevenue, 2), 0) / allRevenues.length);\n    const lowRevenueThreshold = avgRevenue - Math.sqrt(allRevenues.reduce((sum, rev)=>sum + Math.pow(rev - avgRevenue, 2), 0) / allRevenues.length);\n    // 3. Sử dụng Groq AI để tạo insights tự nhiên\n    const timeDescription = timeType === \"week\" ? `tuần ${timeValue}` : timeType === \"month\" ? `tháng ${timeValue}` : `quý ${timeValue}`;\n    if (branch && branch !== \"all\") {\n        // Khi chọn 1 chi nhánh cụ thể, sử dụng AI để phân tích\n        const branchData = branchAnalysis[branch];\n        // Kiểm tra branchData có tồn tại không\n        if (!branchData) {\n            console.log(`Branch data not found for: ${branch}`);\n            // Sử dụng fallback insights\n            const fallbackData = {\n                totalRevenue,\n                avgROI,\n                branch,\n                timeDescription,\n                year\n            };\n            const fallbackInsights = (0,_utils_insights_schema__WEBPACK_IMPORTED_MODULE_3__.createFallbackInsights)(fallbackData);\n            insights.overview = fallbackInsights.overview;\n            insights.topPerformer = fallbackInsights.topPerformer;\n            insights.recommendations = fallbackInsights.recommendations;\n            insights.risks = fallbackInsights.risks;\n            insights.detailedAnalysis = fallbackInsights.detailedAnalysis;\n            insights.trends = fallbackInsights.trends;\n        } else {\n            const branchRevenue = branchData.revenue;\n            const branchAdCost = branchData.adCost;\n            const branchROI = branchData.roi;\n            const revenuePerDay = branchRevenue / (timeType === \"week\" ? 7 : timeType === \"month\" ? 30 : 90);\n            const adCostRatio = branchAdCost / branchRevenue * 100;\n            // Phân tích hiệu suất tương đối với tất cả chi nhánh\n            const roiRank = allROIs.filter((roi)=>roi > branchROI).length + 1;\n            const revenueRank = allRevenues.filter((rev)=>rev > branchRevenue).length + 1;\n            const totalBranches = allROIs.length;\n            const performanceLevel = branchROI > exceptionalROIThreshold ? \"Xuất sắc\" : branchROI > highROIThreshold ? \"Tốt\" : branchROI > avgROIOverall ? \"Tr\\xean trung b\\xecnh\" : branchROI > lowROIThreshold ? \"Trung b\\xecnh\" : \"Cần cải thiện\";\n            // Tạo prompt ngắn gọn cho AI\n            const aiPrompt = `Phân tích chi nhánh ${branch}:\nDoanh thu: ${(branchRevenue / 1000000000).toFixed(2)} tỷ VND, ROI: ${branchROI.toFixed(2)} (xếp hạng ${roiRank}/${totalBranches})\nChi phí: ${(branchAdCost / 1000000).toFixed(0)} triệu VND, hiệu suất: ${performanceLevel}\nROI trung bình hệ thống: ${avgROIOverall.toFixed(2)}\nKênh: ${Object.entries(channelAnalysis).map(([channel, data])=>`${channel}(${data.percentage.toFixed(1)}%, ROI:${data.roi.toFixed(2)})`).join(\", \")}`;\n            try {\n                const aiResponse = await generateGroqInsights(aiPrompt);\n                // Sanitize JSON fallback với helper mới\n                let aiInsights;\n                try {\n                    const cleanResponse = (0,_utils_json_cleaner__WEBPACK_IMPORTED_MODULE_2__.cleanJsonResponse)(aiResponse);\n                    aiInsights = (0,_utils_json_cleaner__WEBPACK_IMPORTED_MODULE_2__.safeParse)(cleanResponse);\n                    console.log(\"AI response parsed successfully:\", aiInsights);\n                } catch (parseError) {\n                    console.log(\"AI response is not valid JSON:\", aiResponse);\n                    console.log(\"Parse error:\", parseError);\n                    // Try one more time with a more aggressive approach\n                    try {\n                        let lastAttempt = aiResponse;\n                        // Find anything that looks like JSON\n                        const matches = lastAttempt.match(/\\{[^{}]*(?:\\{[^{}]*\\}[^{}]*)*\\}/g);\n                        if (matches && matches.length > 0) {\n                            // Take the longest match that's under 5000 chars (most likely to be complete and valid)\n                            const validMatches = matches.filter((match)=>match.length < 5000);\n                            if (validMatches.length > 0) {\n                                const longestMatch = validMatches.reduce((a, b)=>a.length > b.length ? a : b);\n                                aiInsights = (0,_utils_json_cleaner__WEBPACK_IMPORTED_MODULE_2__.safeParse)(longestMatch);\n                                console.log(\"AI response parsed on second attempt:\", aiInsights);\n                            } else {\n                                aiInsights = null;\n                            }\n                        } else {\n                            aiInsights = null;\n                        }\n                    } catch (secondError) {\n                        console.log(\"Second parse attempt also failed:\", secondError);\n                        aiInsights = null;\n                    }\n                }\n                // Validate và parse với schema\n                if (aiInsights && typeof aiInsights === \"object\") {\n                    try {\n                        const validatedInsights = _utils_insights_schema__WEBPACK_IMPORTED_MODULE_3__.InsightsSchema.parse(aiInsights);\n                        insights.overview = validatedInsights.overview;\n                        insights.topPerformer = validatedInsights.topPerformer;\n                        insights.recommendations = validatedInsights.recommendations;\n                        insights.risks = validatedInsights.risks;\n                        insights.detailedAnalysis = validatedInsights.detailedAnalysis;\n                        insights.trends = validatedInsights.trends;\n                    } catch (validationError) {\n                        console.log(\"Schema validation failed, using fallback:\", validationError);\n                        // Fallback to basic analysis if AI fails\n                        const fallbackData = {\n                            totalRevenue,\n                            avgROI,\n                            branch,\n                            timeDescription,\n                            year\n                        };\n                        const fallbackInsights = (0,_utils_insights_schema__WEBPACK_IMPORTED_MODULE_3__.createFallbackInsights)(fallbackData);\n                        insights.overview = fallbackInsights.overview;\n                        insights.topPerformer = fallbackInsights.topPerformer;\n                        insights.recommendations = fallbackInsights.recommendations;\n                        insights.risks = fallbackInsights.risks;\n                        insights.detailedAnalysis = fallbackInsights.detailedAnalysis;\n                        insights.trends = fallbackInsights.trends;\n                    }\n                } else {\n                    // Fallback to basic analysis if AI fails\n                    const fallbackData = {\n                        totalRevenue,\n                        avgROI,\n                        branch,\n                        timeDescription,\n                        year\n                    };\n                    const fallbackInsights = (0,_utils_insights_schema__WEBPACK_IMPORTED_MODULE_3__.createFallbackInsights)(fallbackData);\n                    insights.overview = fallbackInsights.overview;\n                    insights.topPerformer = fallbackInsights.topPerformer;\n                    insights.recommendations = fallbackInsights.recommendations;\n                    insights.risks = fallbackInsights.risks;\n                    insights.detailedAnalysis = fallbackInsights.detailedAnalysis;\n                    insights.trends = fallbackInsights.trends;\n                }\n            } catch (error) {\n                console.error(\"Error generating AI insights:\", error);\n                // Fallback to basic analysis if AI fails\n                const fallbackData = {\n                    totalRevenue,\n                    avgROI,\n                    branch,\n                    timeDescription,\n                    year\n                };\n                const fallbackInsights = (0,_utils_insights_schema__WEBPACK_IMPORTED_MODULE_3__.createFallbackInsights)(fallbackData);\n                insights.overview = fallbackInsights.overview;\n                insights.topPerformer = fallbackInsights.topPerformer;\n                insights.recommendations = fallbackInsights.recommendations;\n                insights.risks = fallbackInsights.risks;\n                insights.detailedAnalysis = fallbackInsights.detailedAnalysis;\n                insights.trends = fallbackInsights.trends;\n            }\n        }\n    } else {\n        // Sử dụng AI cho phân tích tất cả chi nhánh\n        const revenuePerDay = totalRevenue / (timeType === \"week\" ? 7 : timeType === \"month\" ? 30 : 90);\n        const adCostRatio = totalAdCost / totalRevenue * 100;\n        const branchCount = Object.keys(branchAnalysis).length;\n        const channelCount = Object.keys(channelAnalysis).length;\n        // Phân tích phân bổ\n        const revenueDistribution = Object.values(branchAnalysis).map((b)=>b.percentage);\n        const revenueVariance = revenueDistribution.reduce((sum, p)=>sum + Math.pow(p - 100 / branchCount, 2), 0) / branchCount;\n        const distributionType = revenueVariance > 200 ? \"Tập trung cao\" : revenueVariance > 100 ? \"Tập trung vừa\" : \"C\\xe2n bằng\";\n        // Tạo prompt ngắn gọn cho AI phân tích tất cả chi nhánh\n        const allBranchesPrompt = `Phân tích hệ thống ${timeDescription} ${year}:\nTổng doanh thu: ${(totalRevenue / 1000000000).toFixed(2)} tỷ VND, ROI: ${avgROI.toFixed(2)}\nDoanh thu/ngày: ${(revenuePerDay / 1000000).toFixed(1)} triệu VND, ${branchCount} chi nhánh, ${channelCount} kênh\nChi nhánh: ${Object.entries(branchAnalysis).map(([branchName, data])=>`${branchName}(${(data.revenue / 1000000000).toFixed(2)} tỷ, ${data.percentage.toFixed(1)}%, ROI:${data.roi.toFixed(2)})`).join(\", \")}\nKênh: ${Object.entries(channelAnalysis).map(([channel, data])=>`${channel}(${data.percentage.toFixed(1)}%, ROI:${data.roi.toFixed(2)})`).join(\", \")}`;\n        try {\n            const aiResponse = await generateGroqInsights(allBranchesPrompt);\n            // Sanitize JSON fallback với helper mới\n            let aiInsights;\n            try {\n                const cleanResponse = (0,_utils_json_cleaner__WEBPACK_IMPORTED_MODULE_2__.cleanJsonResponse)(aiResponse);\n                aiInsights = (0,_utils_json_cleaner__WEBPACK_IMPORTED_MODULE_2__.safeParse)(cleanResponse);\n                console.log(\"AI response for all branches parsed successfully:\", aiInsights);\n            } catch (parseError) {\n                console.log(\"AI response for all branches is not valid JSON:\", aiResponse);\n                console.log(\"Parse error:\", parseError);\n                // Try one more time with a more aggressive approach\n                try {\n                    let lastAttempt = aiResponse;\n                    // Find anything that looks like JSON\n                    const matches = lastAttempt.match(/\\{[^{}]*(?:\\{[^{}]*\\}[^{}]*)*\\}/g);\n                    if (matches && matches.length > 0) {\n                        // Take the longest match that's under 5000 chars (most likely to be complete and valid)\n                        const validMatches = matches.filter((match)=>match.length < 5000);\n                        if (validMatches.length > 0) {\n                            const longestMatch = validMatches.reduce((a, b)=>a.length > b.length ? a : b);\n                            aiInsights = (0,_utils_json_cleaner__WEBPACK_IMPORTED_MODULE_2__.safeParse)(longestMatch);\n                            console.log(\"AI response for all branches parsed on second attempt:\", aiInsights);\n                        } else {\n                            aiInsights = null;\n                        }\n                    } else {\n                        aiInsights = null;\n                    }\n                } catch (secondError) {\n                    console.log(\"Second parse attempt for all branches also failed:\", secondError);\n                    aiInsights = null;\n                }\n            }\n            // Validate và parse với schema\n            if (aiInsights && typeof aiInsights === \"object\") {\n                try {\n                    const validatedInsights = _utils_insights_schema__WEBPACK_IMPORTED_MODULE_3__.InsightsSchema.parse(aiInsights);\n                    insights.overview = validatedInsights.overview;\n                    insights.topPerformer = validatedInsights.topPerformer;\n                    insights.recommendations = validatedInsights.recommendations;\n                    insights.risks = validatedInsights.risks;\n                    insights.detailedAnalysis = validatedInsights.detailedAnalysis;\n                    insights.trends = validatedInsights.trends;\n                } catch (validationError) {\n                    console.log(\"Schema validation failed for all branches, using fallback:\", validationError);\n                    // Fallback to basic analysis if AI fails\n                    const fallbackData = {\n                        totalRevenue,\n                        avgROI,\n                        branch: \"all\",\n                        timeDescription,\n                        year\n                    };\n                    const fallbackInsights = (0,_utils_insights_schema__WEBPACK_IMPORTED_MODULE_3__.createFallbackInsights)(fallbackData);\n                    insights.overview = fallbackInsights.overview;\n                    insights.topPerformer = fallbackInsights.topPerformer;\n                    insights.recommendations = fallbackInsights.recommendations;\n                    insights.risks = fallbackInsights.risks;\n                    insights.detailedAnalysis = fallbackInsights.detailedAnalysis;\n                    insights.trends = fallbackInsights.trends;\n                }\n            } else {\n                // Fallback to basic analysis if AI fails\n                const fallbackData = {\n                    totalRevenue,\n                    avgROI,\n                    branch: \"all\",\n                    timeDescription,\n                    year\n                };\n                const fallbackInsights = (0,_utils_insights_schema__WEBPACK_IMPORTED_MODULE_3__.createFallbackInsights)(fallbackData);\n                insights.overview = fallbackInsights.overview;\n                insights.topPerformer = fallbackInsights.topPerformer;\n                insights.recommendations = fallbackInsights.recommendations;\n                insights.risks = fallbackInsights.risks;\n                insights.detailedAnalysis = fallbackInsights.detailedAnalysis;\n                insights.trends = fallbackInsights.trends;\n            }\n        } catch (error) {\n            console.error(\"Error generating AI insights for all branches:\", error);\n            // Fallback to basic analysis if AI fails\n            const fallbackData = {\n                totalRevenue,\n                avgROI,\n                branch: \"all\",\n                timeDescription,\n                year\n            };\n            const fallbackInsights = (0,_utils_insights_schema__WEBPACK_IMPORTED_MODULE_3__.createFallbackInsights)(fallbackData);\n            insights.overview = fallbackInsights.overview;\n            insights.topPerformer = fallbackInsights.topPerformer;\n            insights.recommendations = fallbackInsights.recommendations;\n            insights.risks = fallbackInsights.risks;\n            insights.detailedAnalysis = fallbackInsights.detailedAnalysis;\n            insights.trends = fallbackInsights.trends;\n        }\n    // AI sẽ tạo tất cả phân tích chi tiết\n    }\n    // AI sẽ tạo tất cả phân tích hiệu suất\n    // AI sẽ tạo tất cả đề xuất chiến lược\n    // AI sẽ tạo tất cả đề xuất về phân bổ và tối ưu hóa\n    // AI sẽ tạo tất cả tóm tắt\n    // AI sẽ tạo tất cả phân tích xu hướng\n    // AI sẽ tạo tất cả cảnh báo rủi ro và đề xuất tích cực\n    return insights;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/sales-dashboard/route.ts\n");

/***/ }),

/***/ "(rsc)/./utils/excel-analyzer.ts":
/*!*********************************!*\
  !*** ./utils/excel-analyzer.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExcelAnalyzer: () => (/* binding */ ExcelAnalyzer)\n/* harmony export */ });\n/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! xlsx */ \"(rsc)/./node_modules/xlsx/xlsx.mjs\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nclass ExcelAnalyzer {\n    async loadSalesData() {\n        const excelFiles = [\n            \"sales_Q1_2025_with_branch.xlsx\",\n            \"sales_Q2_2025_with_branch.xlsx\",\n            \"sales_Q3_2025_with_branch.xlsx\",\n            \"sales_Q4_2025_with_branch.xlsx\"\n        ];\n        for (const file of excelFiles){\n            try {\n                const filePath = path__WEBPACK_IMPORTED_MODULE_0___default().join(process.cwd(), file);\n                // Kiểm tra file có tồn tại không\n                if (!fs__WEBPACK_IMPORTED_MODULE_1___default().existsSync(filePath)) {\n                    console.error(`File not found: ${filePath}`);\n                    continue;\n                }\n                // Đọc file bằng fs.readFileSync\n                const buffer = fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(filePath);\n                const workbook = xlsx__WEBPACK_IMPORTED_MODULE_2__.read(buffer, {\n                    type: \"buffer\"\n                });\n                const sheetName = workbook.SheetNames[0];\n                const worksheet = workbook.Sheets[sheetName];\n                const jsonData = xlsx__WEBPACK_IMPORTED_MODULE_2__.utils.sheet_to_json(worksheet);\n                // Transform data to our format\n                const transformedData = jsonData.map((row)=>({\n                        quarter: row.quarter,\n                        year: parseInt(row.year),\n                        week: parseInt(row.week),\n                        week_start_date: parseInt(row.week_start_date),\n                        channel: row.channel,\n                        branch: row.branch,\n                        total_revenue: parseFloat(row.total_revenue || 0),\n                        ad_cost: parseFloat(row.ad_cost || 0),\n                        roi: parseFloat(row.roi || 0)\n                    }));\n                this.salesData.push(...transformedData);\n                console.log(`Loaded ${transformedData.length} records from ${file}`);\n            } catch (error) {\n                console.error(`Error loading ${file}:`, error);\n            }\n        }\n    }\n    getWeeklyReport(targetWeek, targetYear = 2025) {\n        const filteredData = this.salesData.filter((item)=>item.week === targetWeek && item.year === targetYear);\n        const totalRevenue = filteredData.reduce((sum, item)=>sum + item.total_revenue, 0);\n        const totalAdCost = filteredData.reduce((sum, item)=>sum + item.ad_cost, 0);\n        const branchBreakdown = {};\n        const channelBreakdown = {};\n        const dailyRevenue = {};\n        filteredData.forEach((item)=>{\n            // Branch breakdown\n            branchBreakdown[item.branch] = (branchBreakdown[item.branch] || 0) + item.total_revenue;\n            // Channel breakdown\n            channelBreakdown[item.channel] = (channelBreakdown[item.channel] || 0) + item.total_revenue;\n            // Daily revenue (using week_start_date)\n            const dateKey = new Date((item.week_start_date - 25569) * 86400 * 1000).toISOString().split(\"T\")[0];\n            dailyRevenue[dateKey] = (dailyRevenue[dateKey] || 0) + item.total_revenue;\n        });\n        // Top performing branches by ROI\n        const branchROI = Object.keys(branchBreakdown).map((branch)=>{\n            const branchData = filteredData.filter((item)=>item.branch === branch);\n            const totalRevenue = branchData.reduce((sum, item)=>sum + item.total_revenue, 0);\n            const totalAdCost = branchData.reduce((sum, item)=>sum + item.ad_cost, 0);\n            const avgROI = totalAdCost > 0 ? totalRevenue / totalAdCost : 0;\n            return {\n                branch,\n                revenue: totalRevenue,\n                roi: avgROI\n            };\n        }).sort((a, b)=>b.roi - a.roi);\n        return {\n            week: `Tuần ${targetWeek}, ${targetYear}`,\n            totalRevenue,\n            branchBreakdown,\n            dailyRevenue,\n            topProducts: branchROI.slice(0, 5).map((item)=>({\n                    product: item.branch,\n                    revenue: item.revenue\n                })),\n            growthRate: totalAdCost > 0 ? totalRevenue / totalAdCost : 0\n        };\n    }\n    getDataStructure() {\n        if (this.salesData.length === 0) {\n            return {\n                message: \"No data loaded\"\n            };\n        }\n        const sample = this.salesData[0];\n        const uniqueBranches = Array.from(new Set(this.salesData.map((item)=>item.branch)));\n        const weekRange = {\n            start: this.salesData.reduce((min, item)=>item.week < min.week ? item : min).week,\n            end: this.salesData.reduce((max, item)=>item.week > max.week ? item : max).week\n        };\n        return {\n            totalRecords: this.salesData.length,\n            sampleRecord: sample,\n            branches: uniqueBranches,\n            weekRange,\n            fields: Object.keys(sample)\n        };\n    }\n    getAllData() {\n        return this.salesData;\n    }\n    constructor(){\n        this.salesData = [];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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dEIsSUFBSSxJQUFJLENBQUNuQyxTQUFTLENBQUNHLE1BQU0sS0FBSyxHQUFHO1lBQy9CLE9BQU87Z0JBQUVpQyxTQUFTO1lBQWlCO1FBQ3JDO1FBRUEsTUFBTUMsU0FBUyxJQUFJLENBQUNyQyxTQUFTLENBQUMsRUFBRTtRQUNoQyxNQUFNc0MsaUJBQWlCQyxNQUFNQyxJQUFJLENBQUMsSUFBSUMsSUFBSSxJQUFJLENBQUN6QyxTQUFTLENBQUNiLEdBQUcsQ0FBQ3NCLENBQUFBLE9BQVFBLEtBQUtkLE1BQU07UUFDaEYsTUFBTStDLFlBQVk7WUFDaEJDLE9BQU8sSUFBSSxDQUFDM0MsU0FBUyxDQUFDVyxNQUFNLENBQUMsQ0FBQ2lDLEtBQUtuQyxPQUNqQ0EsS0FBS2pCLElBQUksR0FBR29ELElBQUlwRCxJQUFJLEdBQUdpQixPQUFPbUMsS0FDOUJwRCxJQUFJO1lBQ05xRCxLQUFLLElBQUksQ0FBQzdDLFNBQVMsQ0FBQ1csTUFBTSxDQUFDLENBQUNtQyxLQUFLckMsT0FDL0JBLEtBQUtqQixJQUFJLEdBQUdzRCxJQUFJdEQsSUFBSSxHQUFHaUIsT0FBT3FDLEtBQzlCdEQsSUFBSTtRQUNSO1FBRUEsT0FBTztZQUNMdUQsY0FBYyxJQUFJLENBQUMvQyxTQUFTLENBQUNHLE1BQU07WUFDbkM2QyxjQUFjWDtZQUNkWSxVQUFVWDtZQUNWSTtZQUNBUSxRQUFRM0IsT0FBT0MsSUFBSSxDQUFDYTtRQUN0QjtJQUNGO0lBRUFjLGFBQTBCO1FBQ3hCLE9BQU8sSUFBSSxDQUFDbkQsU0FBUztJQUN2Qjs7YUF2SFFBLFlBQXlCLEVBQUU7O0FBd0hyQyIsInNvdXJjZXMiOlsid2VicGFjazovL2FpLWxlYXJuaW5nLXBsYXRmb3JtLy4vdXRpbHMvZXhjZWwtYW5hbHl6ZXIudHM/NzhmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBYTFNYIGZyb20gJ3hsc3gnO1xyXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcclxuaW1wb3J0IGZzIGZyb20gJ2ZzJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgU2FsZXNEYXRhIHtcclxuICBxdWFydGVyOiBzdHJpbmc7XHJcbiAgeWVhcjogbnVtYmVyO1xyXG4gIHdlZWs6IG51bWJlcjtcclxuICB3ZWVrX3N0YXJ0X2RhdGU6IG51bWJlcjtcclxuICBjaGFubmVsOiBzdHJpbmc7XHJcbiAgYnJhbmNoOiBzdHJpbmc7XHJcbiAgdG90YWxfcmV2ZW51ZTogbnVtYmVyO1xyXG4gIGFkX2Nvc3Q6IG51bWJlcjtcclxuICByb2k6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBXZWVrbHlSZXBvcnQge1xyXG4gIHdlZWs6IHN0cmluZztcclxuICB0b3RhbFJldmVudWU6IG51bWJlcjtcclxuICBicmFuY2hCcmVha2Rvd246IHsgW2JyYW5jaDogc3RyaW5nXTogbnVtYmVyIH07XHJcbiAgZGFpbHlSZXZlbnVlOiB7IFtkYXRlOiBzdHJpbmddOiBudW1iZXIgfTtcclxuICB0b3BQcm9kdWN0cz86IEFycmF5PHsgcHJvZHVjdDogc3RyaW5nOyByZXZlbnVlOiBudW1iZXIgfT47XHJcbiAgZ3Jvd3RoUmF0ZT86IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEV4Y2VsQW5hbHl6ZXIge1xyXG4gIHByaXZhdGUgc2FsZXNEYXRhOiBTYWxlc0RhdGFbXSA9IFtdO1xyXG5cclxuICBhc3luYyBsb2FkU2FsZXNEYXRhKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgY29uc3QgZXhjZWxGaWxlcyA9IFtcclxuICAgICAgJ3NhbGVzX1ExXzIwMjVfd2l0aF9icmFuY2gueGxzeCcsXHJcbiAgICAgICdzYWxlc19RMl8yMDI1X3dpdGhfYnJhbmNoLnhsc3gnLCBcclxuICAgICAgJ3NhbGVzX1EzXzIwMjVfd2l0aF9icmFuY2gueGxzeCcsXHJcbiAgICAgICdzYWxlc19RNF8yMDI1X3dpdGhfYnJhbmNoLnhsc3gnXHJcbiAgICBdO1xyXG5cclxuICAgIGZvciAoY29uc3QgZmlsZSBvZiBleGNlbEZpbGVzKSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgZmlsZVBhdGggPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgZmlsZSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gS2nhu4NtIHRyYSBmaWxlIGPDsyB04buTbiB04bqhaSBraMO0bmdcclxuICAgICAgICBpZiAoIWZzLmV4aXN0c1N5bmMoZmlsZVBhdGgpKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGBGaWxlIG5vdCBmb3VuZDogJHtmaWxlUGF0aH1gKTtcclxuICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAvLyDEkOG7jWMgZmlsZSBi4bqxbmcgZnMucmVhZEZpbGVTeW5jXHJcbiAgICAgICAgY29uc3QgYnVmZmVyID0gZnMucmVhZEZpbGVTeW5jKGZpbGVQYXRoKTtcclxuICAgICAgICBjb25zdCB3b3JrYm9vayA9IFhMU1gucmVhZChidWZmZXIsIHsgdHlwZTogJ2J1ZmZlcicgfSk7XHJcbiAgICAgICAgY29uc3Qgc2hlZXROYW1lID0gd29ya2Jvb2suU2hlZXROYW1lc1swXTtcclxuICAgICAgICBjb25zdCB3b3Jrc2hlZXQgPSB3b3JrYm9vay5TaGVldHNbc2hlZXROYW1lXTtcclxuICAgICAgICBcclxuICAgICAgICBjb25zdCBqc29uRGF0YSA9IFhMU1gudXRpbHMuc2hlZXRfdG9fanNvbih3b3Jrc2hlZXQpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIFRyYW5zZm9ybSBkYXRhIHRvIG91ciBmb3JtYXRcclxuICAgICAgICBjb25zdCB0cmFuc2Zvcm1lZERhdGEgPSBqc29uRGF0YS5tYXAoKHJvdzogYW55KSA9PiAoe1xyXG4gICAgICAgICAgcXVhcnRlcjogcm93LnF1YXJ0ZXIsXHJcbiAgICAgICAgICB5ZWFyOiBwYXJzZUludChyb3cueWVhciksXHJcbiAgICAgICAgICB3ZWVrOiBwYXJzZUludChyb3cud2VlayksXHJcbiAgICAgICAgICB3ZWVrX3N0YXJ0X2RhdGU6IHBhcnNlSW50KHJvdy53ZWVrX3N0YXJ0X2RhdGUpLFxyXG4gICAgICAgICAgY2hhbm5lbDogcm93LmNoYW5uZWwsXHJcbiAgICAgICAgICBicmFuY2g6IHJvdy5icmFuY2gsXHJcbiAgICAgICAgICB0b3RhbF9yZXZlbnVlOiBwYXJzZUZsb2F0KHJvdy50b3RhbF9yZXZlbnVlIHx8IDApLFxyXG4gICAgICAgICAgYWRfY29zdDogcGFyc2VGbG9hdChyb3cuYWRfY29zdCB8fCAwKSxcclxuICAgICAgICAgIHJvaTogcGFyc2VGbG9hdChyb3cucm9pIHx8IDApXHJcbiAgICAgICAgfSkpO1xyXG5cclxuICAgICAgICB0aGlzLnNhbGVzRGF0YS5wdXNoKC4uLnRyYW5zZm9ybWVkRGF0YSk7XHJcbiAgICAgICAgY29uc29sZS5sb2coYExvYWRlZCAke3RyYW5zZm9ybWVkRGF0YS5sZW5ndGh9IHJlY29yZHMgZnJvbSAke2ZpbGV9YCk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihgRXJyb3IgbG9hZGluZyAke2ZpbGV9OmAsIGVycm9yKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZ2V0V2Vla2x5UmVwb3J0KHRhcmdldFdlZWs6IG51bWJlciwgdGFyZ2V0WWVhcjogbnVtYmVyID0gMjAyNSk6IFdlZWtseVJlcG9ydCB7XHJcbiAgICBjb25zdCBmaWx0ZXJlZERhdGEgPSB0aGlzLnNhbGVzRGF0YS5maWx0ZXIoaXRlbSA9PiBcclxuICAgICAgaXRlbS53ZWVrID09PSB0YXJnZXRXZWVrICYmIGl0ZW0ueWVhciA9PT0gdGFyZ2V0WWVhclxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCB0b3RhbFJldmVudWUgPSBmaWx0ZXJlZERhdGEucmVkdWNlKChzdW0sIGl0ZW0pID0+IHN1bSArIGl0ZW0udG90YWxfcmV2ZW51ZSwgMCk7XHJcbiAgICBjb25zdCB0b3RhbEFkQ29zdCA9IGZpbHRlcmVkRGF0YS5yZWR1Y2UoKHN1bSwgaXRlbSkgPT4gc3VtICsgaXRlbS5hZF9jb3N0LCAwKTtcclxuICAgIFxyXG4gICAgY29uc3QgYnJhbmNoQnJlYWtkb3duOiB7IFticmFuY2g6IHN0cmluZ106IG51bWJlciB9ID0ge307XHJcbiAgICBjb25zdCBjaGFubmVsQnJlYWtkb3duOiB7IFtjaGFubmVsOiBzdHJpbmddOiBudW1iZXIgfSA9IHt9O1xyXG4gICAgY29uc3QgZGFpbHlSZXZlbnVlOiB7IFtkYXRlOiBzdHJpbmddOiBudW1iZXIgfSA9IHt9O1xyXG5cclxuICAgIGZpbHRlcmVkRGF0YS5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAvLyBCcmFuY2ggYnJlYWtkb3duXHJcbiAgICAgIGJyYW5jaEJyZWFrZG93bltpdGVtLmJyYW5jaF0gPSAoYnJhbmNoQnJlYWtkb3duW2l0ZW0uYnJhbmNoXSB8fCAwKSArIGl0ZW0udG90YWxfcmV2ZW51ZTtcclxuICAgICAgXHJcbiAgICAgIC8vIENoYW5uZWwgYnJlYWtkb3duXHJcbiAgICAgIGNoYW5uZWxCcmVha2Rvd25baXRlbS5jaGFubmVsXSA9IChjaGFubmVsQnJlYWtkb3duW2l0ZW0uY2hhbm5lbF0gfHwgMCkgKyBpdGVtLnRvdGFsX3JldmVudWU7XHJcbiAgICAgIFxyXG4gICAgICAvLyBEYWlseSByZXZlbnVlICh1c2luZyB3ZWVrX3N0YXJ0X2RhdGUpXHJcbiAgICAgIGNvbnN0IGRhdGVLZXkgPSBuZXcgRGF0ZSgoaXRlbS53ZWVrX3N0YXJ0X2RhdGUgLSAyNTU2OSkgKiA4NjQwMCAqIDEwMDApLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXTtcclxuICAgICAgZGFpbHlSZXZlbnVlW2RhdGVLZXldID0gKGRhaWx5UmV2ZW51ZVtkYXRlS2V5XSB8fCAwKSArIGl0ZW0udG90YWxfcmV2ZW51ZTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIFRvcCBwZXJmb3JtaW5nIGJyYW5jaGVzIGJ5IFJPSVxyXG4gICAgY29uc3QgYnJhbmNoUk9JID0gT2JqZWN0LmtleXMoYnJhbmNoQnJlYWtkb3duKS5tYXAoYnJhbmNoID0+IHtcclxuICAgICAgY29uc3QgYnJhbmNoRGF0YSA9IGZpbHRlcmVkRGF0YS5maWx0ZXIoaXRlbSA9PiBpdGVtLmJyYW5jaCA9PT0gYnJhbmNoKTtcclxuICAgICAgY29uc3QgdG90YWxSZXZlbnVlID0gYnJhbmNoRGF0YS5yZWR1Y2UoKHN1bSwgaXRlbSkgPT4gc3VtICsgaXRlbS50b3RhbF9yZXZlbnVlLCAwKTtcclxuICAgICAgY29uc3QgdG90YWxBZENvc3QgPSBicmFuY2hEYXRhLnJlZHVjZSgoc3VtLCBpdGVtKSA9PiBzdW0gKyBpdGVtLmFkX2Nvc3QsIDApO1xyXG4gICAgICBjb25zdCBhdmdST0kgPSB0b3RhbEFkQ29zdCA+IDAgPyB0b3RhbFJldmVudWUgLyB0b3RhbEFkQ29zdCA6IDA7XHJcbiAgICAgIHJldHVybiB7IGJyYW5jaCwgcmV2ZW51ZTogdG90YWxSZXZlbnVlLCByb2k6IGF2Z1JPSSB9O1xyXG4gICAgfSkuc29ydCgoYSwgYikgPT4gYi5yb2kgLSBhLnJvaSk7XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgd2VlazogYFR14bqnbiAke3RhcmdldFdlZWt9LCAke3RhcmdldFllYXJ9YCxcclxuICAgICAgdG90YWxSZXZlbnVlLFxyXG4gICAgICBicmFuY2hCcmVha2Rvd24sXHJcbiAgICAgIGRhaWx5UmV2ZW51ZSxcclxuICAgICAgdG9wUHJvZHVjdHM6IGJyYW5jaFJPSS5zbGljZSgwLCA1KS5tYXAoaXRlbSA9PiAoeyBwcm9kdWN0OiBpdGVtLmJyYW5jaCwgcmV2ZW51ZTogaXRlbS5yZXZlbnVlIH0pKSxcclxuICAgICAgZ3Jvd3RoUmF0ZTogdG90YWxBZENvc3QgPiAwID8gdG90YWxSZXZlbnVlIC8gdG90YWxBZENvc3QgOiAwXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZ2V0RGF0YVN0cnVjdHVyZSgpOiBhbnkge1xyXG4gICAgaWYgKHRoaXMuc2FsZXNEYXRhLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICByZXR1cm4geyBtZXNzYWdlOiAnTm8gZGF0YSBsb2FkZWQnIH07XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgc2FtcGxlID0gdGhpcy5zYWxlc0RhdGFbMF07XHJcbiAgICBjb25zdCB1bmlxdWVCcmFuY2hlcyA9IEFycmF5LmZyb20obmV3IFNldCh0aGlzLnNhbGVzRGF0YS5tYXAoaXRlbSA9PiBpdGVtLmJyYW5jaCkpKTtcclxuICAgIGNvbnN0IHdlZWtSYW5nZSA9IHtcclxuICAgICAgc3RhcnQ6IHRoaXMuc2FsZXNEYXRhLnJlZHVjZSgobWluLCBpdGVtKSA9PiBcclxuICAgICAgICBpdGVtLndlZWsgPCBtaW4ud2VlayA/IGl0ZW0gOiBtaW5cclxuICAgICAgKS53ZWVrLFxyXG4gICAgICBlbmQ6IHRoaXMuc2FsZXNEYXRhLnJlZHVjZSgobWF4LCBpdGVtKSA9PiBcclxuICAgICAgICBpdGVtLndlZWsgPiBtYXgud2VlayA/IGl0ZW0gOiBtYXhcclxuICAgICAgKS53ZWVrXHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIHRvdGFsUmVjb3JkczogdGhpcy5zYWxlc0RhdGEubGVuZ3RoLFxyXG4gICAgICBzYW1wbGVSZWNvcmQ6IHNhbXBsZSxcclxuICAgICAgYnJhbmNoZXM6IHVuaXF1ZUJyYW5jaGVzLFxyXG4gICAgICB3ZWVrUmFuZ2UsXHJcbiAgICAgIGZpZWxkczogT2JqZWN0LmtleXMoc2FtcGxlKVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGdldEFsbERhdGEoKTogU2FsZXNEYXRhW10ge1xyXG4gICAgcmV0dXJuIHRoaXMuc2FsZXNEYXRhO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiWExTWCIsInBhdGgiLCJmcyIsIkV4Y2VsQW5hbHl6ZXIiLCJsb2FkU2FsZXNEYXRhIiwiZXhjZWxGaWxlcyIsImZpbGUiLCJmaWxlUGF0aCIsImpvaW4iLCJwcm9jZXNzIiwiY3dkIiwiZXhpc3RzU3luYyIsImNvbnNvbGUiLCJlcnJvciIsImJ1ZmZlciIsInJlYWRGaWxlU3luYyIsIndvcmtib29rIiwicmVhZCIsInR5cGUiLCJzaGVldE5hbWUiLCJTaGVldE5hbWVzIiwid29ya3NoZWV0IiwiU2hlZXRzIiwianNvbkRhdGEiLCJ1dGlscyIsInNoZWV0X3RvX2pzb24iLCJ0cmFuc2Zvcm1lZERhdGEiLCJtYXAiLCJyb3ciLCJxdWFydGVyIiwieWVhciIsInBhcnNlSW50Iiwid2VlayIsIndlZWtfc3RhcnRfZGF0ZSIsImNoYW5uZWwiLCJicmFuY2giLCJ0b3RhbF9yZXZlbnVlIiwicGFyc2VGbG9hdCIsImFkX2Nvc3QiLCJyb2kiLCJzYWxlc0RhdGEiLCJwdXNoIiwibG9nIiwibGVuZ3RoIiwiZ2V0V2Vla2x5UmVwb3J0IiwidGFyZ2V0V2VlayIsInRhcmdldFllYXIiLCJmaWx0ZXJlZERhdGEiLCJmaWx0ZXIiLCJpdGVtIiwidG90YWxSZXZlbnVlIiwicmVkdWNlIiwic3VtIiwidG90YWxBZENvc3QiLCJicmFuY2hCcmVha2Rvd24iLCJjaGFubmVsQnJlYWtkb3duIiwiZGFpbHlSZXZlbnVlIiwiZm9yRWFjaCIsImRhdGVLZXkiLCJEYXRlIiwidG9JU09TdHJpbmciLCJzcGxpdCIsImJyYW5jaFJPSSIsIk9iamVjdCIsImtleXMiLCJicmFuY2hEYXRhIiwiYXZnUk9JIiwicmV2ZW51ZSIsInNvcnQiLCJhIiwiYiIsInRvcFByb2R1Y3RzIiwic2xpY2UiLCJwcm9kdWN0IiwiZ3Jvd3RoUmF0ZSIsImdldERhdGFTdHJ1Y3R1cmUiLCJtZXNzYWdlIiwic2FtcGxlIiwidW5pcXVlQnJhbmNoZXMiLCJBcnJheSIsImZyb20iLCJTZXQiLCJ3ZWVrUmFuZ2UiLCJzdGFydCIsIm1pbiIsImVuZCIsIm1heCIsInRvdGFsUmVjb3JkcyIsInNhbXBsZVJlY29yZCIsImJyYW5jaGVzIiwiZmllbGRzIiwiZ2V0QWxsRGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./utils/excel-analyzer.ts\n");

/***/ }),

/***/ "(rsc)/./utils/insights-schema.ts":
/*!**********************************!*\
  !*** ./utils/insights-schema.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InsightsSchema: () => (/* binding */ InsightsSchema),\n/* harmony export */   createFallbackInsights: () => (/* binding */ createFallbackInsights)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/v4/classic/schemas.js\");\n\nconst InsightsSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    overview: zod__WEBPACK_IMPORTED_MODULE_0__.string(),\n    topPerformer: zod__WEBPACK_IMPORTED_MODULE_0__.string(),\n    recommendations: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.string()),\n    risks: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.string()),\n    detailedAnalysis: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.string()),\n    trends: zod__WEBPACK_IMPORTED_MODULE_0__.string()\n});\nfunction createFallbackInsights(data) {\n    const { totalRevenue, avgROI, branch, timeDescription, year } = data;\n    return {\n        overview: `Phân tích tổng quan hệ thống với doanh thu ${totalRevenue?.toLocaleString(\"vi-VN\") || \"N/A\"} VND và ROI ${avgROI?.toFixed(2) || \"N/A\"}.`,\n        topPerformer: \"Chi nh\\xe1nh c\\xf3 hiệu suất tốt nhất đang dẫn đầu về doanh thu v\\xe0 ROI\",\n        recommendations: [\n            \"Tối ưu h\\xf3a chi ph\\xed quảng c\\xe1o\",\n            \"Ph\\xe1t triển chiến lược k\\xeanh b\\xe1n h\\xe0ng\",\n            \"Cải thiện hiệu quả vận h\\xe0nh\"\n        ],\n        risks: [\n            \"Theo d\\xf5i xu hướng thị trường\",\n            \"Kiểm so\\xe1t rủi ro t\\xe0i ch\\xednh\",\n            \"Quản l\\xfd hiệu suất chi nh\\xe1nh\"\n        ],\n        detailedAnalysis: [\n            \"Ph\\xe2n t\\xedch hiệu quả chi nh\\xe1nh\",\n            \"Đ\\xe1nh gi\\xe1 ROI v\\xe0 chi ph\\xed\",\n            \"Xem x\\xe9t xu hướng tuần\",\n            \"Tối ưu h\\xf3a ph\\xe2n bổ nguồn lực\"\n        ],\n        trends: \"Xu hướng tăng trưởng ổn định với tiềm năng cải thiện\"\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi91dGlscy9pbnNpZ2h0cy1zY2hlbWEudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdCO0FBRWpCLE1BQU1DLGlCQUFpQkQsdUNBQVEsQ0FBQztJQUNyQ0csVUFBVUgsdUNBQVE7SUFDbEJLLGNBQWNMLHVDQUFRO0lBQ3RCTSxpQkFBaUJOLHNDQUFPLENBQUNBLHVDQUFRO0lBQ2pDUSxPQUFPUixzQ0FBTyxDQUFDQSx1Q0FBUTtJQUN2QlMsa0JBQWtCVCxzQ0FBTyxDQUFDQSx1Q0FBUTtJQUNsQ1UsUUFBUVYsdUNBQVE7QUFDbEIsR0FBRztBQUlJLFNBQVNXLHVCQUF1QkMsSUFBUztJQUM5QyxNQUFNLEVBQUVDLFlBQVksRUFBRUMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLGVBQWUsRUFBRUMsSUFBSSxFQUFFLEdBQUdMO0lBRWhFLE9BQU87UUFDTFQsVUFBVSxDQUFDLDJDQUEyQyxFQUFFVSxjQUFjSyxlQUFlLFlBQVksTUFBTSxZQUFZLEVBQUVKLFFBQVFLLFFBQVEsTUFBTSxNQUFNLENBQUMsQ0FBQztRQUNuSmQsY0FBYztRQUNkQyxpQkFBaUI7WUFDZjtZQUNBO1lBQ0E7U0FDRDtRQUNERSxPQUFPO1lBQ0w7WUFDQTtZQUNBO1NBQ0Q7UUFDREMsa0JBQWtCO1lBQ2hCO1lBQ0E7WUFDQTtZQUNBO1NBQ0Q7UUFDREMsUUFBUTtJQUNWO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haS1sZWFybmluZy1wbGF0Zm9ybS8uL3V0aWxzL2luc2lnaHRzLXNjaGVtYS50cz9lZGYwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHogfSBmcm9tIFwiem9kXCI7XG5cbmV4cG9ydCBjb25zdCBJbnNpZ2h0c1NjaGVtYSA9IHoub2JqZWN0KHtcbiAgb3ZlcnZpZXc6IHouc3RyaW5nKCksXG4gIHRvcFBlcmZvcm1lcjogei5zdHJpbmcoKSxcbiAgcmVjb21tZW5kYXRpb25zOiB6LmFycmF5KHouc3RyaW5nKCkpLFxuICByaXNrczogei5hcnJheSh6LnN0cmluZygpKSxcbiAgZGV0YWlsZWRBbmFseXNpczogei5hcnJheSh6LnN0cmluZygpKSxcbiAgdHJlbmRzOiB6LnN0cmluZygpLFxufSk7XG5cbmV4cG9ydCB0eXBlIEluc2lnaHRzID0gei5pbmZlcjx0eXBlb2YgSW5zaWdodHNTY2hlbWE+O1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRmFsbGJhY2tJbnNpZ2h0cyhkYXRhOiBhbnkpOiBJbnNpZ2h0cyB7XG4gIGNvbnN0IHsgdG90YWxSZXZlbnVlLCBhdmdST0ksIGJyYW5jaCwgdGltZURlc2NyaXB0aW9uLCB5ZWFyIH0gPSBkYXRhO1xuICBcbiAgcmV0dXJuIHtcbiAgICBvdmVydmlldzogYFBow6JuIHTDrWNoIHThu5VuZyBxdWFuIGjhu4cgdGjhu5FuZyB24bubaSBkb2FuaCB0aHUgJHt0b3RhbFJldmVudWU/LnRvTG9jYWxlU3RyaW5nKCd2aS1WTicpIHx8ICdOL0EnfSBWTkQgdsOgIFJPSSAke2F2Z1JPST8udG9GaXhlZCgyKSB8fCAnTi9BJ30uYCxcbiAgICB0b3BQZXJmb3JtZXI6IFwiQ2hpIG5ow6FuaCBjw7MgaGnhu4d1IHN14bqldCB04buRdCBuaOG6pXQgxJFhbmcgZOG6q24gxJHhuqd1IHbhu4EgZG9hbmggdGh1IHbDoCBST0lcIixcbiAgICByZWNvbW1lbmRhdGlvbnM6IFtcbiAgICAgIFwiVOG7kWkgxrB1IGjDs2EgY2hpIHBow60gcXXhuqNuZyBjw6FvXCIsXG4gICAgICBcIlBow6F0IHRyaeG7g24gY2hp4bq/biBsxrDhu6NjIGvDqm5oIGLDoW4gaMOgbmdcIiwgXG4gICAgICBcIkPhuqNpIHRoaeG7h24gaGnhu4d1IHF14bqjIHbhuq1uIGjDoG5oXCJcbiAgICBdLFxuICAgIHJpc2tzOiBbXG4gICAgICBcIlRoZW8gZMO1aSB4dSBoxrDhu5tuZyB0aOG7iyB0csaw4budbmdcIixcbiAgICAgIFwiS2nhu4NtIHNvw6F0IHLhu6dpIHJvIHTDoGkgY2jDrW5oXCIsXG4gICAgICBcIlF14bqjbiBsw70gaGnhu4d1IHN14bqldCBjaGkgbmjDoW5oXCJcbiAgICBdLFxuICAgIGRldGFpbGVkQW5hbHlzaXM6IFtcbiAgICAgIFwiUGjDom4gdMOtY2ggaGnhu4d1IHF14bqjIGNoaSBuaMOhbmhcIixcbiAgICAgIFwixJDDoW5oIGdpw6EgUk9JIHbDoCBjaGkgcGjDrVwiLFxuICAgICAgXCJYZW0geMOpdCB4dSBoxrDhu5tuZyB0deG6p25cIixcbiAgICAgIFwiVOG7kWkgxrB1IGjDs2EgcGjDom4gYuG7lSBuZ3Xhu5NuIGzhu7FjXCJcbiAgICBdLFxuICAgIHRyZW5kczogXCJYdSBoxrDhu5tuZyB0xINuZyB0csaw4bufbmcg4buVbiDEkeG7i25oIHbhu5tpIHRp4buBbSBuxINuZyBj4bqjaSB0aGnhu4duXCJcbiAgfTtcbn1cbiJdLCJuYW1lcyI6WyJ6IiwiSW5zaWdodHNTY2hlbWEiLCJvYmplY3QiLCJvdmVydmlldyIsInN0cmluZyIsInRvcFBlcmZvcm1lciIsInJlY29tbWVuZGF0aW9ucyIsImFycmF5Iiwicmlza3MiLCJkZXRhaWxlZEFuYWx5c2lzIiwidHJlbmRzIiwiY3JlYXRlRmFsbGJhY2tJbnNpZ2h0cyIsImRhdGEiLCJ0b3RhbFJldmVudWUiLCJhdmdST0kiLCJicmFuY2giLCJ0aW1lRGVzY3JpcHRpb24iLCJ5ZWFyIiwidG9Mb2NhbGVTdHJpbmciLCJ0b0ZpeGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./utils/insights-schema.ts\n");

/***/ }),

/***/ "(rsc)/./utils/json-cleaner.ts":
/*!*******************************!*\
  !*** ./utils/json-cleaner.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanJsonResponse: () => (/* binding */ cleanJsonResponse),\n/* harmony export */   extractBalancedJson: () => (/* binding */ extractBalancedJson),\n/* harmony export */   safeParse: () => (/* binding */ safeParse)\n/* harmony export */ });\n/* harmony import */ var json5__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! json5 */ \"(rsc)/./node_modules/json5/dist/index.mjs\");\n\nfunction extractBalancedJson(raw) {\n    const start = raw.indexOf(\"{\");\n    const end = raw.lastIndexOf(\"}\");\n    if (start === -1 || end === -1) throw new Error(\"No braces\");\n    let slice = raw.slice(start, end + 1);\n    return slice.replace(/,(\\s*[}\\]])/g, \"$1\") // bỏ dấu , cuối mảng/object\n    .replace(/\\n/g, \" \") // xoá newline thừa\n    .replace(/\\s{2,}/g, \" \"); // xoá space thừa\n}\nfunction safeParse(raw) {\n    return json5__WEBPACK_IMPORTED_MODULE_0__[\"default\"].parse(raw);\n}\nfunction cleanJsonResponse(response) {\n    let cleanResponse = response.trim();\n    // Remove common prefixes that AI might add\n    const prefixesToRemove = [\n        \"Here is the detailed analysis in Vietnamese:\",\n        \"Here is the detailed analysis in JSON format:\",\n        \"Here is the JSON output:\",\n        \"Here is the analysis:\",\n        \"Here's the JSON:\",\n        \"Here is th\",\n        \"Here is\",\n        \"JSON:\",\n        \"Output:\",\n        \"Result:\",\n        \"Analysis:\",\n        \"Response:\",\n        \"Note:\",\n        \"As a Chief Strategy Officer\"\n    ];\n    for (const prefix of prefixesToRemove){\n        if (cleanResponse.startsWith(prefix)) {\n            cleanResponse = cleanResponse.substring(prefix.length).trim();\n        }\n    }\n    // More aggressive cleaning - remove any text before the first {\n    const firstBrace = cleanResponse.indexOf(\"{\");\n    if (firstBrace > 0) {\n        cleanResponse = cleanResponse.substring(firstBrace);\n    }\n    // Remove any text after the last }\n    const lastBrace = cleanResponse.lastIndexOf(\"}\");\n    if (lastBrace > 0 && lastBrace < cleanResponse.length - 1) {\n        cleanResponse = cleanResponse.substring(0, lastBrace + 1);\n    }\n    // Handle markdown code blocks\n    if (cleanResponse.includes(\"```json\")) {\n        cleanResponse = cleanResponse.split(\"```json\")[1].split(\"```\")[0].trim();\n    } else if (cleanResponse.includes(\"```\")) {\n        // Find all code blocks and take the longest one\n        const codeBlocks = cleanResponse.match(/```([\\s\\S]*?)```/g);\n        if (codeBlocks && codeBlocks.length > 0) {\n            const longestBlock = codeBlocks.reduce((a, b)=>a.length > b.length ? a : b);\n            cleanResponse = longestBlock.replace(/```/g, \"\").trim();\n        }\n    }\n    // Clean up common JSON format issues\n    cleanResponse = cleanResponse.replace(/[\\u0000-\\u001F\\u007F-\\u009F]/g, \"\") // Remove control characters\n    .replace(/fakihuyongfakihuyongfakihuyong/g, \"\") // Remove repeated text\n    .replace(/otecungfakihuyongfakihuyong/g, \"\") // Remove more repeated text\n    .trim();\n    // Truncate if too long to prevent JSON parsing errors\n    if (cleanResponse.length > 5000) {\n        console.log(\"Response too long, truncating...\");\n        // Try to find the last complete JSON field before truncation\n        const lastCompleteField = cleanResponse.lastIndexOf('\",', 5000);\n        if (lastCompleteField > 0) {\n            cleanResponse = cleanResponse.substring(0, lastCompleteField + 1) + \"}\";\n        } else {\n            cleanResponse = cleanResponse.substring(0, 5000) + '\"}';\n        }\n    }\n    // Final safety check - if it doesn't start with {, make it JSON\n    if (!cleanResponse.startsWith(\"{\")) {\n        console.log(\"Response does not start with {, creating fallback JSON\");\n        throw new Error(\"Invalid JSON format\");\n    }\n    // Validate JSON structure before parsing\n    const braceCount = (cleanResponse.match(/\\{/g) || []).length;\n    const closeBraceCount = (cleanResponse.match(/\\}/g) || []).length;\n    if (braceCount !== closeBraceCount) {\n        console.log(\"Unmatched braces detected, creating fallback JSON\");\n        throw new Error(\"Invalid JSON structure\");\n    }\n    // Check for incomplete JSON fields\n    const quoteCount = (cleanResponse.match(/\"/g) || []).length;\n    if (quoteCount % 2 !== 0) {\n        console.log(\"Unmatched quotes detected, creating fallback JSON\");\n        throw new Error(\"Invalid JSON structure - unmatched quotes\");\n    }\n    // Check for common JSON issues and fix them\n    if (cleanResponse.includes(\"Nh\\xf3\") || cleanResponse.includes(\"fakihuyong\") || cleanResponse.includes(\"otecung\")) {\n        console.log(\"Detected problematic text in JSON, creating fallback JSON\");\n        throw new Error(\"Invalid JSON content\");\n    }\n    // Check for repetitive patterns that indicate corrupted response\n    const repetitivePatterns = [\n        /Nhó Nhó Nhó/,\n        /fakihuyongfakihuyong/,\n        /otecungotecung/,\n        /Nhó Nhó Nhó Nhó/\n    ];\n    for (const pattern of repetitivePatterns){\n        if (pattern.test(cleanResponse)) {\n            console.log(\"Detected repetitive pattern in JSON, creating fallback JSON\");\n            throw new Error(\"Invalid JSON content - repetitive pattern\");\n        }\n    }\n    // Check for incomplete JSON (missing closing brace)\n    if (!cleanResponse.endsWith(\"}\")) {\n        console.log(\"Incomplete JSON detected, creating fallback JSON\");\n        throw new Error(\"Invalid JSON structure - incomplete\");\n    }\n    return cleanResponse;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./utils/json-cleaner.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/xlsx","vendor-chunks/formdata-node","vendor-chunks/groq-sdk","vendor-chunks/zod","vendor-chunks/form-data-encoder","vendor-chunks/whatwg-url","vendor-chunks/agentkeepalive","vendor-chunks/tr46","vendor-chunks/web-streams-polyfill","vendor-chunks/node-fetch","vendor-chunks/json5","vendor-chunks/webidl-conversions","vendor-chunks/ms","vendor-chunks/humanize-ms","vendor-chunks/event-target-shim","vendor-chunks/abort-controller"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsales-dashboard%2Froute&page=%2Fapi%2Fsales-dashboard%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsales-dashboard%2Froute.ts&appDir=D%3A%5CSales%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CSales&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();